name: Docker and Helm Build and Push


on:
  push:
    branches:
      - main

env:
  CR_REGISTRY: ghcr.io
  CR_REPO: ${{ github.repository }}
  CR_REPO_PREDICTION: 

jobs:
  lint:
    runs-on: ubuntu-latest
    #environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: install golint
        run: GO111MODULE=off go get -u golang.org/x/lint/golint
  
      - name: Add golint to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
  

      - name: run lint
        run: make lint

  test:
    runs-on: ubuntu-latest
    #environment: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: run lint
        run: make test

  build-upload-artefact:
    runs-on: ubuntu-latest
    needs: [lint,test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: run lint
        run: make build 

      - uses: actions/upload-artifact@v3
        with:
          name: goblin
          path: build/main
  build-and-push:
    runs-on: ubuntu-latest
    #environment: dev
    steps:


      - name: Checkout code
        uses: actions/checkout@v2


      #- name: Set up QEMU
     #   uses: docker/setup-qemu-action@v2
 
      #- name: Set up Docker Buildx
     #   uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CR_REGISTRY }}
          username: ${{ secrets.USERNAME_FOR_CR }}
          password: ${{ secrets.TOKEN_FOR_CR }}


      - name: Get version
        id: getver
        run: echo "GIT_VER=$(git describe --match "v*" --abbrev=4 --tags --always)-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          file: ./Dockerfile
          context: .
          tags: ${{ env.CR_REGISTRY }}/${{ env.CR_REPO }}:${{ env.GIT_VER }} 
